from __future__ import annotations

from aiogram import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery

from tgbot.kb import ReplyMarkups, InlineMarkups
from tgbot.utils import SQLRequests, SectionName


def register_advice_handlers(dp: Dispatcher) -> None:
    dp.register_callback_query_handler(advice_mode, text='adv_mode_start', state=None)
    dp.register_message_handler(advice_mode, commands=["advice"], state=None)
    dp.register_message_handler(advice_mode, Text(equals='üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞', ignore_case=True), state=None)
    dp.register_callback_query_handler(advice_mode2,
                                       lambda call: call.data in SQLRequests
                                       .select_by_table_and_column('adv_assertions', 'topic_name'), state=None)
    dp.register_message_handler(advice_mode3,
                                lambda message: message.text in SQLRequests
                                .select_by_table_and_column('adv_answers', 'adv_answers'), state=None)


async def advice_mode(message: Message | CallbackQuery) -> None:
    SectionName.s_name = '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞'  # for logging purposes
    if isinstance(message, CallbackQuery):
        message = message.message
    await  message.answer_photo(
        photo=open('tgbot/assets/advice.jpg', 'rb'),
        caption='üü¢ –°–æ–±—Ä–∞–ª–∏ —Å–æ–≤–µ—Ç—ã –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ –æ —Ç–æ–º, –∫–∞–∫ –Ω–µ —Å–æ–π—Ç–∏ —Å —É–º–∞ –∏ –≥–æ–≤–æ—Ä–∏—Ç—å –æ –≤–æ–π–Ω–µ —Å –±–ª–∏–∑–∫–∏–º–∏,'
                ' —á–µ–≥–æ –æ–∂–∏–¥–∞—Ç—å, –∫–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–µ—Å—Ç–∏ —Å–µ–±—è.', reply_markup=ReplyKeyboardRemove())
    await  message.answer('‚ùì –ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–ª–∏–∑–∫–∏–º–∏ –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã\n\n'
                          '–í –æ—Å–Ω–æ–≤–µ –±–ª–∏–∑–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –ª–µ–∂–∏—Ç –¥–æ–≤–µ—Ä–∏–µ. –û–Ω–æ —Ä–∞–∑—Ä—É—à–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Ç–µ–º—ã, '
                          '–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –æ–±—Ö–æ–¥–∏—Ç—å —Å—Ç–æ—Ä–æ–Ω–æ–π ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–π–Ω–∞. –†–∞–∑–≥–æ–≤–æ—Ä –æ–± —ç—Ç–æ–º –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ '
                          '–∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º, –º–Ω–æ–≥–∏–µ –µ–≥–æ –∏–∑–±–µ–≥–∞—é—Ç. –ù–æ –Ω–∞ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –ø–æ–ø—ã—Ç–∫–∏ –æ–±—Ö–æ–¥–∏—Ç—å –≤–æ–ø—Ä–æ—Å '
                          '–≤–æ–π–Ω—ã —Ç—Ä–∞—Ç–∏—Ç—Å—è –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏: –≤—ã –º–æ–∂–µ—Ç–µ –Ω–µ –∑–∞–º–µ—á–∞—Ç—å, –∫–∞–∫ –∏—Å—á–µ–∑–∞–µ—Ç –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å, '
                          '—Ä–∞—Å—Ç–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∏ –≤—ã –æ—Ç–¥–∞–ª—è–µ—Ç–µ—Å—å –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.\n\n'
                          '–í —Ä–∞–∑–≥–æ–≤–æ—Ä–µ –Ω–∞ —Å–ª–æ–∂–Ω—É—é —Ç–µ–º—É –≤–∞–∂–Ω–æ –Ω–µ —Ä–∞–Ω–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ –ø–æ–º–Ω–∏—Ç—å, '
                          '—á—Ç–æ –¥–∞–∂–µ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä ‚Äî —ç—Ç–æ —à–∞–≥ –Ω–∞–≤—Å—Ç—Ä–µ—á—É. '
                          '–î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —Ç–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –∏–º–µ–Ω–Ω–æ –æ –Ω–µ–π –º—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.\n\n'
                          '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å ‚¨á',
                          reply_markup=InlineMarkups
                          .create_im(1, [*SQLRequests.
                                     select_by_table_and_column('adv_assertions', 'topic_name'), '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
                                     [*SQLRequests.
                                     select_by_table_and_column('adv_assertions', 'topic_name'), 'main_menu']))
    await message.delete()


async def advice_mode2(call: CallbackQuery) -> None:
    adv_id = SQLRequests.select_by_table_and_column('adv_assertions', 'adv_id', 'topic_name', call.data)
    section_description = SQLRequests.select_by_table_and_column('adv_assertions', 'adv_description', 'topic_name', call.data)
    await call.answer(cache_time=10)
    await call.message.answer(*section_description, reply_markup=ReplyMarkups.create_rm(2, False,
                                            *SQLRequests.select_by_table_and_column('adv_answers', 'adv_answers', 'adv_id', *adv_id)))


async def advice_mode3(message: Message) -> None:
    await  message.answer(
        *SQLRequests.select_by_table_and_column('adv_answers', 'adv_description', 'adv_answers', message.text),
        reply_markup=InlineMarkups.create_im(1, ['–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'], ['adv_mode_start']))
